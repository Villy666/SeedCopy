buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${KOTLIN_VERSION}"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'

version = SEEDCOPY_VERSION
group = "santa.seedcopy"
archivesBaseName = "SeedCopy-${MC_VERSION}"

minecraft {
    version = "${MC_VERSION}-${FORGE_VERSION}"
    mappings = MCP_MAPPINGS
    runDir = "eclipse"
}

repositories {
    maven {
        name 'Tethys'
        url 'http://tethys.drakon.io/maven'
    }
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    // TODO: Update 1.8.9 to ${MC_VERSION} once Emberwalker fixes the mcmod.info issue.
    shade "org.jetbrains.kotlin:kotlin-stdlib:${KOTLIN_VERSION}"
    shade "io.drakon.forge:kotlin-adapter:${KOTLIN_VERSION}+1.8.9"
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

reobf {
    jar {
        extraLines += [ "PK: kotlin santa/seedcopy/repack/kotlin" ]
        extraLines += [ "PK: org/jetbrains/annotations santa/seedcopy/repack/annotations" ]
        extraLines += [ "PK: io/drakon/forge/kotlin santa/seedcopy/repack/adapter" ]
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
